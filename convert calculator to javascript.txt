--- Content of static-variables.json ---

```json
{
  "actionability_mitigations_lower_cutoff": 0,
  "actionability_mitigations_upper_cutoff": 55,
  "actionability_detections_lower_cutoff": 0,
  "actionability_detections_upper_cutoff": 100,
  "actionability_mitigations_to_detections_ratio": 2,
  "actionability_w_miti1": 1,
  "chokepoint_before_lower_cutoff": 0,
  "chokepoint_before_upper_cutoff": 10,
  "chokepoint_after_lower_cutoff": 0,
  "chokepoint_after_upper_cutoff": 10,
  "chokepoint_before_to_after_ratio": 1,
  "chokepoint_w_before1": 1,
  "ransomware_utility_tat_lower_cutoff": 0,
  "ransomware_utility_tat_upper_cutoff": 3,
  "ransomware_utility_count_lower_cutoff": 0,
  "ransomware_utility_count_upper_cutoff": 21,
  "ransomware_utility_tat_to_count_ratio": 3,
  "ransomware_utility_w_tat1": 1,
  "ransomware_polynomial_w_count1": 1,
  "ransomware_polynomial_w_tat1": 0,
  "ransomware_polynomial_w_counttat1": 1,
  "ransomware_polynomial_w_countcount1": 0,
  "weight_score_none": 0.198,
  "weight_score_low": 0.132,
  "weight_score_medium": 0.066,
  "weight_score_high": 0
}
```

--- Example content from attack-prev-tid.json ---

```json
[
    {
        "attack_object_id":  "T1001",
        "calc_tid_before":  "2",
        "calc_tid_after":  "2",
        "calc_prev_score":  "0.011577"
    },
    {
        "attack_object_id":  "T1001.001",
        "calc_tid_before":  "1",
        "calc_tid_after":  "1",
        "calc_prev_score":  "0"
    }
]
```

--- example of json-output based on user form input ---

```json
{
    "organization_attributes": {},
    "asset_types": [
        {
            "asset_category": "devices",
            "asset_type": "Linux Server OS",
            "environment": "AWS",
            "monitoring_coverage": {
                "network": "High",
                "process": "Medium",
                "file": "Low",
                "cloud": "None",
                "hardware": "Low"
            }
        }
    ]
}
```

--- Content of weight-keywords.json ---

```json
[
  {
    "process_weight_keywords": [
      "Process",
      "Command",
      "Script",
      "WMI",
      "Module",
      "Pipe",
      "Service"
    ]
  },
  {
    "network_weight_keywords": [
      "Network",
      "Firewall"
    ]
  },
  {
    "file_weight_keywords": [
      "File",
      "Group",
      "Logon",
      "Schedule",
      "User",
      "Registry",
      "Active",
      "Application"
    ]
  },
  {
    "cloud_weight_keywords": [
      "Cloud",
      "Cluster",
      "Container",
      "Image",
      "Instance",
      "Pod",
      "Snapshot",
      "Volume"
    ]
  },
  {
    "hardware_weight_keywords": [
      "Drive",
      "Firmware",
      "Host",
      "Kernel"
    ]
  }
]
```

--- Example from nist_800_53-rev5_attack-14.1-enterprise.json ---

```json
{
  "metadata": {
    "mapping_version": "",
    "technology_domain": "enterprise",
    "attack_version": "14.1",
    "mapping_framework": "nist_800_53",
    "mapping_framework_version": "rev5",
    "author": null,
    "contact": null,
    "organization": null,
    "creation_date": "01/13/2022",
    "last_update": "01/13/2022",
    "mapping_types": {
      "protects": {
        "name": "Protects",
        "description": ""
      },
      "non_mappable": {
        "name": "Non-Mappable",
        "description": ""
      }
    },
    "capability_groups": {
      "AC": "Access Control",
      "CA": "Security Assessment and Authorization",
      "CM": "Configuration Management",
      "SC": "System and Communications Protection",
      "SI": "System and Information Integrity",
      "CP": "Contingency Planning",
      "IA": "Identification and Authentication",
      "SA": "System and Services Acquisition",
      "RA": "Risk Assessment",
      "MP": "Media Protection",
      "SR": "Supply Chain Risk Management",
      "AU": "Audit and Accountability",
      "IR": "Incident Response"
    }
  },
  "mapping_objects": [
    {
      "capability_id": null,
      "capability_group": null,
      "capability_description": null,
      "attack_object_id": "T1608.006",
      "attack_object_name": "SEO Poisoning",
      "references": [],
      "mapping_type": "non_mappable",
      "status": "non_mappable"
    }
  ]
}
```

--- Example from cis_safeguard_to_techniques.json ---

```json
[
    {
        "cis_safeguard": "1.1",
        "attack_techniques": [
            {
                "technique_id": "T1098.005",
                "technique_name": "Account Manipulation: Device Registration"
            }
        ]
    }
]
```

--- Mapping from PowerBI Calculations to new data sources ---

'Top Techniques Calc Methodology'[Num. TID Before] -> 'attack-prev-tid.json'[][calc_tid_before] where []["attack_object_id"] contains the ATT&CK technique ID

'Top Techniques Calc Methodology'[Num. TID After] -> 'attack-prev-tid.json'[calc_tid_after] where []["attack_object_id"] contains the ATT&CK technique ID 

'Top Techniques Calc Methodology'[Num. 800-53 (r5)] -> 'nist_800_53-rev5_attack-14.1-enterprise.json'["mapping_objects"[]["capability_id"]] where ["mapping_objects"[]["attack_object_id"]] contains the ATT&CK technique ID

'Top Techniques Calc Methodology'[Num. CIS Controls] -> 'cis_safeguard_to_techniques.json'[]["cis_safeguard"] where []["attack_techniques"][]["technique_id"] contains the ATT&CK technique ID

'Top Techniques Calc Methodology'[Prevalence Scores] -> 

'Top Techniques Calc Methodology'[Total Detections] -> count of matching dataSources for the ATT&CK technique ID from findDataSources where stixData is from the enterprise-attack.json file:

```javascript
        findDataSources(techniqueId) {
          let dataSources = [];
          for (const key in this.stixData) {
            const objects = this.stixData[key];
            const attackPattern = objects.find(obj =>
              obj.type === 'attack-pattern' &&
              obj.external_references &&
              obj.external_references.some(ref => ref.external_id === techniqueId)
            );

            if (attackPattern) {
              const detectingRelationships = objects.filter(obj =>
                obj.type === 'relationship' &&
                obj.target_ref === attackPattern.id &&
                obj.relationship_type === 'detects'
              );

              dataSources = detectingRelationships.map(rel => {
                const dataComponent = objects.find(obj =>
                  obj.type === 'x-mitre-data-component' && obj.id === rel.source_ref
                );
                if (dataComponent && dataComponent.x_mitre_data_source_ref) {
                  const dataSource = objects.find(obj =>
                    obj.type === 'x-mitre-data-source' && obj.id === dataComponent.x_mitre_data_source_ref
                  );
                  if (dataSource && dataSource.external_references && dataSource.external_references.length > 0) {
                    return `${dataComponent.name} (${dataSource.external_references[0].external_id})`;
                  }
                }
                return null;
              }).filter(ds => ds !== null);
              break;
            }
          }
          return dataSources;
	}
```

--- Original PowerBI unmodified Att&ck Score Calculation ---
Unmodified Att&ck Score = 

VAR actionability_mitigations_lower_cutoff = 0
VAR actionability_mitigations_upper_cutoff = 55
VAR actionability_detections_lower_cutoff = 0
VAR actionability_detections_upper_cutoff = 100
VAR actionability_mitigations_to_detections_ratio = 2
VAR actionability_w_miti1 = 1
VAR actionability_w_detect1 = actionability_w_miti1 / actionability_mitigations_to_detections_ratio * (actionability_detections_upper_cutoff - actionability_detections_lower_cutoff) / (actionability_mitigations_upper_cutoff - actionability_mitigations_lower_cutoff)
VAR actionability_w_miti = actionability_w_miti1 / (actionability_w_detect1 + actionability_w_miti1)
VAR actionability_w_detect = actionability_w_detect1 / (actionability_w_detect1 + actionability_w_miti1)

VAR chokepoint_before_lower_cutoff = 0
VAR chokepoint_before_upper_cutoff = 10
VAR chokepoint_after_lower_cutoff = 0
VAR chokepoint_after_upper_cutoff = 10
VAR chokepoint_before_to_after_ratio = 1
VAR chokepoint_w_before1 = 1
VAR chokepoint_w_after1 = chokepoint_w_before1 / chokepoint_before_to_after_ratio * (chokepoint_after_upper_cutoff - chokepoint_after_lower_cutoff) / (chokepoint_before_upper_cutoff - chokepoint_before_lower_cutoff)
VAR chokepoint_w_before = chokepoint_w_before1 / (chokepoint_w_after1 + chokepoint_w_before1)
VAR chokepoint_w_after = chokepoint_w_after1 / (chokepoint_w_after1 + chokepoint_w_before1)

VAR ransomware_utility_tat_lower_cutoff = 0
VAR ransomware_utility_tat_upper_cutoff = 3
VAR ransomware_utility_count_lower_cutoff = 0
VAR ransomware_utility_count_upper_cutoff = 21
VAR ransomware_utility_tat_to_count_ratio = 3
VAR ransomware_utility_w_tat1 = 1
VAR ransomware_utility_w_count1 = ransomware_utility_w_tat1 / ransomware_utility_tat_to_count_ratio * (ransomware_utility_count_upper_cutoff - ransomware_utility_count_lower_cutoff) / (ransomware_utility_tat_upper_cutoff - ransomware_utility_tat_lower_cutoff)
VAR ransomware_utility_w_tat = ransomware_utility_w_tat1 / (ransomware_utility_w_tat1 + ransomware_utility_w_count1)
VAR ransomware_utility_w_count = ransomware_utility_w_count1 / (ransomware_utility_w_tat1 + ransomware_utility_w_count1)

VAR ransomware_polynomial_w_count1 = 1
VAR ransomware_polynomial_w_tat1 = 0
VAR ransomware_polynomial_w_counttat1 = 1
VAR ransomware_polynomial_w_countcount1 = 0
VAR ransomware_polynomial_w_count = ransomware_polynomial_w_count1 / (ransomware_polynomial_w_count1 + ransomware_polynomial_w_tat1 + ransomware_polynomial_w_counttat1 + ransomware_polynomial_w_countcount1)
VAR ransomware_polynomial_w_tat = ransomware_polynomial_w_tat1 / (ransomware_polynomial_w_count1 + ransomware_polynomial_w_tat1 + ransomware_polynomial_w_counttat1 + ransomware_polynomial_w_countcount1)
VAR ransomware_polynomial_w_counttat = ransomware_polynomial_w_counttat1 / (ransomware_polynomial_w_count1 + ransomware_polynomial_w_tat1 + ransomware_polynomial_w_counttat1 + ransomware_polynomial_w_countcount1)
VAR ransomware_polynomial_w_countcount = ransomware_polynomial_w_countcount1 / (ransomware_polynomial_w_count1 + ransomware_polynomial_w_tat1 + ransomware_polynomial_w_counttat1 + ransomware_polynomial_w_countcount1)


VAR before_utility = IF(
    (RELATED('Top Techniques Calc Methodology'[Num. TID Before]) - chokepoint_before_lower_cutoff)/(chokepoint_before_upper_cutoff - chokepoint_before_lower_cutoff) > 1,
    1,
    IF((RELATED('Top Techniques Calc Methodology'[Num. TID Before]) - chokepoint_before_lower_cutoff)/(chokepoint_before_upper_cutoff - chokepoint_before_lower_cutoff) < 0,
    0,
    (RELATED('Top Techniques Calc Methodology'[Num. TID Before]) - chokepoint_before_lower_cutoff)/(chokepoint_before_upper_cutoff - chokepoint_before_lower_cutoff)
    ))

VAR after_utility = IF(
    (RELATED('Top Techniques Calc Methodology'[Num. TID After]) - chokepoint_after_lower_cutoff)/(chokepoint_after_upper_cutoff - chokepoint_after_lower_cutoff) > 1,
    1,
    IF((RELATED('Top Techniques Calc Methodology'[Num. TID After]) - chokepoint_after_lower_cutoff)/(chokepoint_after_upper_cutoff - chokepoint_after_lower_cutoff) < 0,
    0,
    (RELATED('Top Techniques Calc Methodology'[Num. TID After]) - chokepoint_after_lower_cutoff)/(chokepoint_after_upper_cutoff - chokepoint_after_lower_cutoff)
    ))

VAR chokepoint_score = chokepoint_w_before * before_utility + chokepoint_w_after * after_utility

VAR mitigations_utility = IF(
    (((RELATED('Top Techniques Calc Methodology'[Num. 800-53 (r5)]) + RELATED('Top Techniques Calc Methodology'[Num. CIS Controls])) - actionability_mitigations_lower_cutoff) / (actionability_mitigations_upper_cutoff - actionability_mitigations_lower_cutoff)) > 1,
    1,
    IF(((RELATED('Top Techniques Calc Methodology'[Num. 800-53 (r5)]) + RELATED('Top Techniques Calc Methodology'[Num. CIS Controls])) - actionability_mitigations_lower_cutoff) / (actionability_mitigations_upper_cutoff - actionability_mitigations_lower_cutoff) < 0,
    0,
    (((RELATED('Top Techniques Calc Methodology'[Num. 800-53 (r5)]) + RELATED('Top Techniques Calc Methodology'[Num. CIS Controls])) - actionability_mitigations_lower_cutoff) / (actionability_mitigations_upper_cutoff - actionability_mitigations_lower_cutoff))
    ))

VAR detections_utility = IF(
    ((RELATED('Top Techniques Calc Methodology'[Total Detections]) - actionability_detections_lower_cutoff) / (actionability_detections_upper_cutoff - actionability_detections_lower_cutoff)) > 1,
    1,
    IF((RELATED('Top Techniques Calc Methodology'[Total Detections]) - actionability_detections_lower_cutoff) / (actionability_detections_upper_cutoff - actionability_detections_lower_cutoff) < 0,
    0,
    ((RELATED('Top Techniques Calc Methodology'[Total Detections]) - actionability_detections_lower_cutoff) / (actionability_detections_upper_cutoff - actionability_detections_lower_cutoff))
    ))

VAR actionability_score = actionability_w_miti * mitigations_utility + actionability_w_detect * detections_utility

RETURN RELATED('Top Techniques Calc Methodology'[Prevalence Scores]) + chokepoint_score + actionability_score

--- Original Calc Score PowerBI calculation ---

Calc Score = 
SUMX(
'techniques',
VAR process_weight = 
(IF(
	CONTAINSSTRING([data sources],"Process") ||
	CONTAINSSTRING([data sources],"Command") ||
	CONTAINSSTRING([data sources],"Script") ||
	CONTAINSSTRING([data sources],"WMI") ||
	CONTAINSSTRING([data sources],"Module") ||
	CONTAINSSTRING([data sources],"Pipe") ||
	CONTAINSSTRING([data sources],"Service"),
	(SWITCH(SELECTEDVALUE(process_coverage_table[weight], "None"),
"None", 0.198,
"Low", 0.132,
"Medium", 0.066,
"High", 0 
)),
	0)) 
VAR network_weight = 
(IF(
	CONTAINSSTRING([data sources],"Network") ||
	CONTAINSSTRING([data sources],"Firewall"),
	(SWITCH(SELECTEDVALUE(network_coverage_table[weight], "None"),
"None", 0.198,
"Low", 0.132,
"Medium", 0.066,
"High", 0 
)),
	0)) 
VAR file_weight = 
(IF(
	CONTAINSSTRING([data sources],"File") ||
	CONTAINSSTRING([data sources],"Group") ||
	CONTAINSSTRING([data sources],"Logon") ||
	CONTAINSSTRING([data sources],"Schedule") ||
	CONTAINSSTRING([data sources],"User") ||
	CONTAINSSTRING([data sources],"Registry") ||
	CONTAINSSTRING([data sources],"Active") ||
	CONTAINSSTRING([data sources],"Application"),
	SWITCH(SELECTEDVALUE(file_coverage_table[weight], "None"),
"None", 0.198,
"Low", 0.132,
"Medium", 0.066,
"High", 0 
),
	0))
VAR cloud_weight = 
(IF(
	CONTAINSSTRING([data sources],"Cloud") ||
	CONTAINSSTRING([data sources],"Cluster") ||
	CONTAINSSTRING([data sources],"Container") ||
	CONTAINSSTRING([data sources],"Image") ||
	CONTAINSSTRING([data sources],"Instance") ||
	CONTAINSSTRING([data sources],"Pod") ||
	CONTAINSSTRING([data sources],"Snapshot") ||
	CONTAINSSTRING([data sources],"Volume"),
	SWITCH(SELECTEDVALUE(cloud_coverage_table[weight], "None"),
"None", 0.198,
"Low", 0.132,
"Medium", 0.066,
"High", 0 
),
	0))
VAR hardware_weight = 
(IF(
	CONTAINSSTRING([data sources],"Drive") ||
	CONTAINSSTRING([data sources],"Firmware") ||
	CONTAINSSTRING([data sources],"Host") ||
	CONTAINSSTRING([data sources],"Kernel"),
	SWITCH(SELECTEDVALUE(hardware_coverage_table[weight], "None"),
"None", 0.198,
"Low", 0.132,
"Medium", 0.066,
"High", 0 
),
	0))
VAR weight_sum = process_weight + network_weight + file_weight + cloud_weight + hardware_weight
RETURN
    ([Unmodified Att&ck Score]) * (1 + weight_sum)
)